import pandera as pa
from pandera import (
    DataFrameSchema,
    Column,
    Check,
    Index,
    MultiIndex,
    PandasDtype,
)

play_schema = DataFrameSchema(
    columns={
        "GameId": Column(
            pandas_dtype=PandasDtype.Int64,
            # checks=[
            #     Check.greater_than_or_equal_to(min_value=20700001.0),
            #     Check.less_than_or_equal_to(max_value=51900111.0),
            # ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "PlayNum": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check.less_than_or_equal_to(max_value=611.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "Eventnum": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check.less_than_or_equal_to(max_value=1016.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "Eventmsgtype": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=1.0),
                Check.less_than_or_equal_to(max_value=13.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "Season": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=2007.0),
                Check.less_than_or_equal_to(max_value=2020.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomeTeamId": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=1610612737.0),
                Check.less_than_or_equal_to(max_value=1610612766.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomePlayer1Id": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=15.0),
                Check.less_than_or_equal_to(max_value=1629730.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomePlayer2Id": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=208.0),
                Check.less_than_or_equal_to(max_value=1630222.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomePlayer3Id": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=467.0),
                Check.less_than_or_equal_to(max_value=1630231.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomePlayer4Id": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=757.0),
                Check.less_than_or_equal_to(max_value=1630256.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomePlayer5Id": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=1495.0),
                Check.less_than_or_equal_to(max_value=1630273.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayTeamId": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=1610612737.0),
                Check.less_than_or_equal_to(max_value=1610612766.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayPlayer1Id": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=15.0),
                Check.less_than_or_equal_to(max_value=1629730.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayPlayer2Id": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=208.0),
                Check.less_than_or_equal_to(max_value=1630222.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayPlayer3Id": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=467.0),
                Check.less_than_or_equal_to(max_value=1630231.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayPlayer4Id": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=757.0),
                Check.less_than_or_equal_to(max_value=1630256.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayPlayer5Id": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=1495.0),
                Check.less_than_or_equal_to(max_value=1630273.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "SecRemainGame": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check.less_than_or_equal_to(max_value=2880.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "Period": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=1.0),
                Check.less_than_or_equal_to(max_value=8.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "SecRemainPeriod": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check.less_than_or_equal_to(max_value=720.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "ScoreMargin": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=-58.0),
                Check.less_than_or_equal_to(max_value=65.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomeOff": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check.less_than_or_equal_to(max_value=1.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "StartEvent": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "EndEvent": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomePlayer1Event": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomePlayer2Event": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomePlayer3Event": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomePlayer4Event": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomePlayer5Event": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayPlayer1Event": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayPlayer2Event": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayPlayer3Event": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayPlayer4Event": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayPlayer5Event": Column(
            pandas_dtype=PandasDtype.String,
            checks=None,
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomeNumPlayers": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=1.0),
                Check.less_than_or_equal_to(max_value=6.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayNumPlayers": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=1.0),
                Check.less_than_or_equal_to(max_value=6.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomeFouls": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                # Check.less_than_or_equal_to(max_value=18.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayFouls": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                # Check.less_than_or_equal_to(max_value=22.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomeScore": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                # Check.less_than_or_equal_to(max_value=168.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayScore": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                # Check.less_than_or_equal_to(max_value=168.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "PossCount": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                # Check.less_than_or_equal_to(max_value=292.0),
            ],
            nullable=True,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "SecSinceLastPlay": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=-5.0),
                # Check.less_than_or_equal_to(max_value=129.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "Eventmsgactiontype": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check.less_than_or_equal_to(max_value=110.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
    },
    # index=Index(
    #     pandas_dtype=PandasDtype.Int64,
    #     checks=[
    #         Check.greater_than_or_equal_to(min_value=0.0),
    #         Check.less_than_or_equal_to(max_value=7017726.0),
    #     ],
    #     nullable=False,
    #     coerce=False,
    #     name=None,
    # ),
    coerce=True,
    strict=False,
    name=None,
)

collapsed_schema = DataFrameSchema(
    columns={
        "GameId": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check.less_than_or_equal_to(max_value=41900406.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "PossCount": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check.less_than_or_equal_to(max_value=273.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "Season": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=2007.0),
                Check.less_than_or_equal_to(max_value=2020.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "Period": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=1.0),
                Check.less_than_or_equal_to(max_value=7.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomeOff": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check.less_than_or_equal_to(max_value=1.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "SecRemainGame": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                # Check.less_than_or_equal_to(max_value=2880.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "PlayNum_min": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                # Check.less_than_or_equal_to(max_value=566.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "PlayNum_max": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                # Check.less_than_or_equal_to(max_value=566.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "Eventnum_min": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                # Check.less_than_or_equal_to(max_value=925.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "Eventnum_max": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=1.0),
                # Check.less_than_or_equal_to(max_value=927.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomeScore": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                # Check.less_than_or_equal_to(max_value=168.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayScore": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                # Check.less_than_or_equal_to(max_value=159.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomePts": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=-118.0),
                Check.less_than_or_equal_to(max_value=33.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayPts": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=-128.0),
                Check.less_than_or_equal_to(max_value=39.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "SecSinceLastPlay": Column(
            pandas_dtype=PandasDtype.Int64,
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check.less_than_or_equal_to(max_value=102.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "ScoreMargin": Column(
            pandas_dtype=PandasDtype.Float64,
            checks=[
                Check.greater_than_or_equal_to(min_value=-61.0),
                Check.less_than_or_equal_to(max_value=60.0),
            ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
    },
    # index=Index(
    #     pandas_dtype=PandasDtype.Int64,
    #     checks=[
    #         Check.greater_than_or_equal_to(min_value=0.0),
    #         Check.less_than_or_equal_to(max_value=3308357.0),
    #     ],
    #     nullable=False,
    #     coerce=False,
    #     name=None,
    # ),
    coerce=True,
    strict=False,
    name=None,
)

agg_schema = DataFrameSchema(
    columns={
        "GameId": Column(
            pandas_dtype=PandasDtype.Int64,
            # checks=[
            #     Check.greater_than_or_equal_to(min_value=21900001.0),
            #     Check.less_than_or_equal_to(max_value=21900011.0),
            # ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomeScore_max": Column(
            pandas_dtype=PandasDtype.Int64,
            # checks=[
            #     Check.greater_than_or_equal_to(min_value=94.0),
            #     Check.less_than_or_equal_to(max_value=130.0),
            # ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomeScore_last": Column(
            pandas_dtype=PandasDtype.Int64,
            # checks=[
            #     Check.greater_than_or_equal_to(min_value=94.0),
            #     Check.less_than_or_equal_to(max_value=130.0),
            # ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayScore_max": Column(
            pandas_dtype=PandasDtype.Int64,
            # checks=[
            #     Check.greater_than_or_equal_to(min_value=85.0),
            #     Check.less_than_or_equal_to(max_value=127.0),
            # ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayScore_last": Column(
            pandas_dtype=PandasDtype.Int64,
            # checks=[
            #     Check.greater_than_or_equal_to(min_value=85.0),
            #     Check.less_than_or_equal_to(max_value=127.0),
            # ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "HomeFinalScore": Column(
            pandas_dtype=PandasDtype.Float64,
            # checks=[
            #     Check.greater_than_or_equal_to(min_value=94.0),
            #     Check.less_than_or_equal_to(max_value=130.0),
            # ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
        "AwayFinalScore": Column(
            pandas_dtype=PandasDtype.Float64,
            # checks=[
            #     Check.greater_than_or_equal_to(min_value=85.0),
            #     Check.less_than_or_equal_to(max_value=127.0),
            # ],
            nullable=False,
            allow_duplicates=True,
            coerce=False,
            required=True,
            regex=False,
        ),
    },
    # index=Index(
    #     pandas_dtype=PandasDtype.Int64,
    #     checks=[
    #         Check.greater_than_or_equal_to(min_value=0.0),
    #         Check.less_than_or_equal_to(max_value=10.0),
    #     ],
    #     nullable=False,
    #     coerce=False,
    #     name=None,
    # ),
    checks=[
        pa.Check(lambda df: (df["HomeFinalScore"] == df["HomeScore_last"]).all()),
        pa.Check(lambda df: (df["HomeFinalScore"] == df["HomeScore_max"]).all()),
        pa.Check(lambda df: (df["AwayFinalScore"] == df["AwayScore_last"]).all()),
        pa.Check(lambda df: (df["AwayFinalScore"] == df["AwayScore_max"]).all()),
    ],
    coerce=True,
    strict=False,
    name=None,
)
